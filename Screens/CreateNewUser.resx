<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAAAE
        AADsAAAA7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6LRoAEg4ISTElFdw1KBb4HhYNjgAA
        AAsJBwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfFw0AAAAAA0c1HpVXRS//WEw6/zst
        GesMCQU/GRMKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGxQMAAAAAAdKNx+iWUgz/1tR
        Qv9HNyH8RUI8uUNBPWsUFBIVIyIfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/2HsAGBEKUTor
        GNtQQCz9ZV5T/ZGNh++inZb5ZGFbpgYGBRkgIB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExIRAAAA
        ABFIRkKllpON/mFfXLoZJSmbV2xy+KSinP5mYl2oBwYGGSMhHwAAAAAAAAAAAAAAAAAAAAAAGhoYAAAA
        AA9VU0+Oo6CZ93BtaboTICR/SIKV41msy/9hiJb+op+Z/l1bVZ4AAAALAAAAAAAAAAAAAAAAGhkXAAAA
        AA9WU0+OpKCZ+HBtabgTISV7RXyO5F+Hkv9jgIb/VqPA/1d9jP9ISEW2AAAAEAAAAAUAAAAGS0ZDAAAA
        AA9WUk6Oop6X+mVjYMwiPUVuWaC21V6Gkv+LjIn/p6Ob/3CIjf9ToL3/LmB1yQoTGDVLSUWYbmtmpFRS
        TohnY16opaGa92iFkf4kWHLoO21+5nPP6v5jgYn/q6ii/6iloP+tqKH/b4iM/1Ogvv4pVGfQU1FPxYqH
        guWZlY/ulJCK+WF+if1HkbH+RIWk/zV0kv5dqsP9bMHc/26JkP+yr6r/j42J/5CMhv9bcXf8H0FPrwEB
        ARIICAckGhoaXSlLWt1Di6r/bIWP/52emv9OfpT/NXSS/V2qxP1swdz/b4qR/5aTj/+cmZL+V1ZSpAAA
        ABkBAwUAAAAABR4/TpFDiKf/bIWP/7Kvqv+qpqD/lpeT/0aLq/83epr+W6W9/mm/2/9acnn+V1dTpRAW
        GBYlKioAAgMEAAAAAAIOIyxnUWNq8JmXk/+Fg3//q6ag/2WEjv9Rrtn/Lm6P4R85Q6pEg5rsIUZVoAAA
        ABYEDA8AAAAAAAAAAAAAAAAAAAAABj9AP22hop7ql5SO/2ODjf9Pq9b/NHea5BAnM1MAAAAPCxcdQQkR
        FBQLFhoAAAAAAAAAAAAAAAAAAAAAABolKAAAAAACg4iGXFRrcu1Npc//NHib4xAmMlMAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcVMDx7JVZv5RIrOF4AAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPwfAAD4HwAA+AcAAPwDAAD8AQAA+AAAAPAAAAAgAAAAAAAAAAAA
        AAAAAAAAgAEAAIADAADABwAA4D8AAPB/AAAoAAAAIAAAAEAAAAABACAAAAAAAAAQAADsAAAA7AAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAYJBwSKCQcE8gQDAvwLCQTtBQICbgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADCwkFyiUcEPpgSSn/alAt/1Q/I/8aEwv8CwkFpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAFUaFAzyfV42/1hCKP9ANSb/WUMm/2JKKf8OCwb7AAAANAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAARjIeM3NWMv9mTSz/Hhwa/5WQhf8WFBP/aU8s/zUoFv8JBwSKAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1KRdXc1Yy/1tEJ/83NTL/5uHW/yAfHP9qUC7/OiwZ/wkG
        A7EAAAA3AAAADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAng3KRj3fF02/zcsH/8UEg//Rjkn/31e
        Nv8fGA7+Liwq+z07N/sTEhH6Hx8crwAAAA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgcEA+hRPSP+fV42/31e
        Nv98XTb/QjId/yUiHf/79ur///nu//bv4v95dWz/GBcW5gAAABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgcG
        AtYQDAfvJR0S8RkVEf9FQz7/ysfB/1xbWfJHRkTuu7iz///57/+SjoT+FxcW5gAAABUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAREREMJMSUX94dzS/9XSzP8TExLzBQUFaQAAAGQBAQH9nZqW/P/68P+SjoT+GBgX5wAA
        ABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEbGRirTUpG/fnz6P/V0sz/ExMS8wMDA0kAAAAfCA4R6zNqgf8QHyX8mJiV+//6
        8P+SjYP/GRgX6AAAABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABGxsap0hGQf348uf/2NXP/xQUE/IDAwNOAAAAHQcMDeZQj6L8c9r//1u8
        5/8RISf8kZKP+//68P+Yk4j/FxYV6gAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAARwcG6xNSkb9+fPo/9XSzP8TEhLzAwMDSQAAAB8HDA3nUpKm/H3g
        //973Pr/c9r//1q75f8QHyb9mJmW/P/68P+IhHr+IiEfxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEcHBusTUpG/fnz6P/V0sz/ExIS8wMDA0kAAAAfBwsN51GR
        pfx83fz/OVRd/w4QEP9ZnbP/c9r//1q75f8QHyb9jpCN/LWxqv8dHRvlAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGxsZq01KRv358+j/1dLM/xMSEvMDAwNJAAAAHwcL
        DedRkaX8fN38/zFQWf9UWFb/1c/D/x4fHf9ZnbP/c9r//1q75f8PHSL9BgYG9AQEBD4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARsZGKtNSkb9+fPo/9XSzP8TExLzAwMDSQAA
        AAAeNT2sUpKm/Hzd/P8xUFr/VFhW//Ht5/93dXH/2NLF/x4fHf9ZnbP/c9r//1q75f8PHiX8ChEWaQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEbGRirTUpG/fnz6P/V0sz/Dw8P9QMD
        A00AAAAeJURNnn3g//t94P//NVZg/1RYVv/x7ef/Pj07/3p4df//+/P/2NLF/x4fHf9ZnbP/c9r//1q7
        5f8PHiX8ChEWaQAAAAAAAAAVAAAAcAAAAGoAAABKAAAAKQAAAAgAAAAIGRkYrU1KRv358+j/1dLM/w0V
        GvoTLjz8ChYbzgcLDeRTlKj8feD//3zd/P8PExX/zcrE/5qYk/99e3j///v0/6Gemv9samf/2NLF/x0f
        Hf9ZnbP/c9r//1q75f8PHiX7CA8UZRcXFtxrZ2D/eHNr/1ZTTvwzMS76ExIR+xQTEvpuamP++fPo/9XS
        zP8PFRf3RZO2/lPD/v8iUmv+CxYa9nnZ9/994P//feD//12mvf8XHB3/0M3H///79P+in5v/JyYl/+Tg
        2v/z7+j/zce7/x4fHf9ZnbP/bNX//1m54/8GCw34CQkJ9N7b1P//+vP///rx///57///+e3///js///6
        8f/Kx8H/DxUX90eUtv5k0P//YM38/1PD/v8iUmv+HThC93nZ9/994P//feD//12mvf8XHB3/0M3H/5GP
        i//k4Nr/7Oji/zAvLv+tqqX/0Mu+/x0eHf9Jk7P/MGJ4/w0YHckLCwthDQwM7xAQD/QsLCvtUVBO73l3
        c/qFg37+SEdF8AQGB/tHlLb+ZND//0B9l/8NDg7/O2+E/1PD/v8iUmv+HThC93nZ9/994P//feD//12m
        vf8XHB3/0M3H//r27/8xMC//i4qG/0dGRP+Zl5L/2NDD/wwNDf8MGBzYAAAACwAAAAAAAAAAAAAACwAA
        ACwAAABNAAAAbgAAAJwBAgP7R5S2/mTQ//8+fJf/JCkr/9rUyv82NjP/OmyB/1PD/v8iUmv+HThC93nZ
        9/994P//feD//12mvf8XHB3/z8zG/8TBvP9JSEb/b21q//757/95dW3/IScp5gAAAAsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAnBQsO7EWRsv5k0P//P3+b/yEmKP/h3df//fny//Hq3/82NjP/OmuA/1PD
        /v8jU2z+HTdB93nZ9/994P//feD//1+qwv8WGxz/zMnD/7Kvqv/++e//fHhw/yAlJugAAAANAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAIwULDu1Hlbb+ZND//z58l/8kKSv/6OTe/5qYk/9JSEb/+PTt//Hq
        3/82NjP/PnSK/1PD/v8iUmv+HTdC93nZ9/994P//feD//12mvf8XHB3/0MzE/3l1bf8hKCnnAAAACwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBwmRNW2G/GTQ//8+fJf/JCkr/93Z1P/MycP//vrz/2tp
        Zv9LSkj//vnx/62nm/8kLzP/Ys7//1DB/v8hTmb+HjZA9HnZ9/994P//et7//02cvf8LDAz/ICYo5gAA
        AAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8IERXyNGh//yQpK//d2dT/x8S//yAf
        H/+0saz//vrz/6qnov+5s6f/GR0d/1Os0/9jz///UcP//yhhf/8CBQbtHzc+8nbX9/9o0///MGN5/wwY
        HNkAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADA1ADBAT+xMG8/9fU
        zv8dHRz/raqm/yAfH//W0sz/urSo/xkdHf9TrNP/Y8///1TE//8saYr/CRQa5AAAABIIDQ+cGzZB+ypW
        af8MFxrXAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMD
        A1AXGxz629jS/8PAu/8dHRz/1M/K/7awpf8ZHR3/U6zT/2PP//9UxP//LGmK/wkUGuMAAAARAAAAAAAA
        AAEFDA5uCREUiwAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAMDA1A9Rkjx//v0/9/b1f+2sKX/GR0d/1Os0/9jz///VMT//yxpiv8JFBrjAAAAEQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAID//wKwxMnen5mP/xgcHP9TrNP/Y8///1TE//8saYr/CRQa4wAA
        ABEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsODkgEBAT+RY+v/2PP//9UxP//LGmK/wkU
        GuMAAAARAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADA1AIEhXySKja/yxp
        if8JFBrjAAAAEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMJ
        CVEFCw73ChYa1AAAABEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/4D///8A////AH///wB///8AH///AAf//wAD//+AAf//wAD//4
        AAf/8AAD/+AAA//AAAP/gAAD/wEAA/4AAAEAAAAAAAAAAAAAAAAAAAAAwAAAAfgAAAPwAAAH8AAAD/AA
        AB/4AAA//AAIf/4AH///AD///4B////A////4f//
</value>
  </data>
</root>